name: Deploy to PRODUCTION EKS

on:
    pull_request:
      branches:
      - prod

env:
  ECR_REPOSITORY: repo-prod
  EKS_CLUSTER_NAME: eks-cluster-123 
  AWS_REGION: us-west-2

jobs:
  
  build:
    
    name: Deployment
    runs-on: ubuntu-latest

    steps:
      
    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION}}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: image tag
      run: |
        git branch
        git describe --exact-match --tags $(git log -n1 --pretty='%h' origin/main)
        IMAGE_TAG=$(git describe --exact-match --tags $(git log -n1 --pretty='%h' origin/main))
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
        echo $IMAGE_TAG
      
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        echo $ECR_REGISTRY
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Application/Dockerfile .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
    - name: Install Pritunl VPN
      run: |
          sudo tee /etc/apt/sources.list.d/pritunl.list << EOF
          deb https://repo.pritunl.com/stable/apt jammy main
          EOF
    
          sudo apt --assume-yes install gnupg
          gpg --keyserver hkp://keyserver.ubuntu.com --recv-keys 7568D9BB55FF9E5287D586017AE645C0CF8E292A
          gpg --armor --export 7568D9BB55FF9E5287D586017AE645C0CF8E292A | sudo tee /etc/apt/trusted.gpg.d/pritunl.asc
          sudo apt update
          sudo apt install pritunl-client-electron

    - name: Connect VPN
      run: |
          pritunl-client add ./user-6.tar
          pritunl-client start "$(pritunl-client list | awk 'NR>2 {print $2}' | tr -d '[:space:]')" --password ${{ secrets.PRITUNL_PIN }} 
        
    - name: Update kube config
      run: |
        aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
        
    - name: Set environment variable
      env:
        repourl: ${{ vars.PROD_REPO_URL }}
      run: |
        sed -i "s#REPO_URL#${repourl}#g" helm/chart/values-prod.yaml    

    - name: Deploy to EKS       
      run: |
        helm upgrade --install nodeapp-prod helm/chart/values-prod.yaml -n prod --create-namespace --set image.tag=$IMAGE_TAG
