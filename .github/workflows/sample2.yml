name: Semantic Release

on:
  push:
    branches:
      - main


jobs:
    pre-release:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout code
          uses: actions/checkout@v3
          with :
                fetch-depth: 0
                ref: ${{ github.head_ref }}

        - name: Setup Node.js environment
          uses: actions/setup-node@v3
        - name: Semantic Release dry run
          id: semantic      
          run: |
            OUTPUT=$(unset GITHUB_ACTIONS && npx semantic-release --dry-run --no-ci --branches "${{ github.head_ref }}")
            VERSION=$(echo "$OUTPUT" | grep -o "The next release version is [0-9]*\.[0-9]*\.[0-9]*" | awk '{print $6}')
            echo "::set-output name=version::$VERSION"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
        - name: Use the version
          run: echo "The version is ${{ steps.semantic.outputs.version }}"


# jobs:
#   release:
#     runs-on: ubuntu-latest
#     concurrency: release
#     permissions:
#       id-token: write
#       contents: write

#     steps:
#     - uses: actions/checkout@v3
#       with:
#         fetch-depth: 0

#     - name: Python Semantic Release
#       id: semantic_release
#       uses: python-semantic-release/python-semantic-release@master
#       with:
#         github_token: ${{ secrets.GITHUB_TOKEN }}

#     - name: Get version information
#       run: |
#         echo "New version: ${{ steps.semantic_release.outputs.new_version }}"
#         echo "Previous version: ${{ steps.semantic_release.outputs.previous_version }}"
#         echo "Next version: ${{ steps.semantic_release.outputs.tags_and_versions }}"
#         echo "Tag: ${{ steps.semantic_release.outputs.tag }}"

#     - name: Sample Release Step
#       run: echo "This is a sample release stage"    
# ##